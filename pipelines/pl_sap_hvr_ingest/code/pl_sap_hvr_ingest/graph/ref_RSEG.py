from pyspark.sql import *
from pyspark.sql.functions import *
from pyspark.sql.types import *
from prophecy.utils import *
from prophecy.libs import typed_lit
from pl_sap_hvr_ingest.config.ConfigStore import *
from pl_sap_hvr_ingest.functions import *

def ref_RSEG(spark: SparkSession, in0: DataFrame) -> DataFrame:
    return in0.select(
        col("belnr").alias("doc_number"), 
        col("buzei").alias("line_item_num"), 
        col("gjahr").alias("fiscal_year"), 
        col("mandt").alias("client_num"), 
        col("mrmok").alias("reversal_doc_ind"), 
        col("shkzg").alias("debit_credit_ind"), 
        col("salk3").alias("bal_amt_aftertrans"), 
        col("fsh_theme").alias("tran_theme"), 
        col("bklas").alias("tran_acc_class"), 
        col("vrkum").alias("cum_tran_amt"), 
        col("wrf_charstc1").alias("wrf_characterustic1"), 
        col("matbf").alias("item_material_num"), 
        col("ebelp").alias("purch_ord_item_num"), 
        col("bpmng").alias("item_quantity"), 
        col("re_account").alias("recon_account"), 
        col("bstme").alias("stock_move_post_key"), 
        col("stock_posting_pp").alias("stock_move_post_amt"), 
        col("spgrt").alias("spl_gl_ind"), 
        col("kschl").alias("condition_type"), 
        col("bnkan").alias("bank_charges_post_amt"), 
        col("lfbnr").alias("del_note_ref_num"), 
        col("bustw").alias("doc_post_period"), 
        col("lfgja").alias("doc_fiscal_year"), 
        col("lifnr").alias("vendor_number"), 
        col("srvmapkey").alias("srv_map_key"), 
        col("stunr").alias("tran_status_num_ind"), 
        col("retduedt").alias("return_due_date"), 
        col("sgt_scat").alias("subseg_cat"), 
        col("rbwwr").alias("local_curr_ret_amt"), 
        col("srm_contract_itm").alias("srm_contract_item_num"), 
        col("werks").alias("record_plant_code"), 
        col("ebeln").alias("purchase_ord_num"), 
        col("erp_contract_id"), 
        col("spgrp").alias("record_group_code"), 
        col("bukrs").alias("record_company_code"), 
        col("tbtkz").alias("spl_gl_tran_ind"), 
        col("exkbe").alias("purch_doc_ind"), 
        col("spgrg").alias("spl_stock_reason"), 
        col("charg").alias("batch_num"), 
        col("lfpos").alias("del_item_num"), 
        col("spgrc").alias("spl_grp_code"), 
        col("packno").alias("package_num"), 
        col("werec").alias("warehouse_receipt"), 
        col("bprbm").alias("bus_proc_ref"), 
        col("bwtar").alias("valuation_type"), 
        col("pstyp").alias("posting_type"), 
        col("xrettaxnet").alias("tax_relevance_ind"), 
        col("xlifo").alias("life_valuation_ind"), 
        col("lfehl").alias("del_billing_ind"), 
        col("kzmek").alias("special_gl_ind"), 
        col("fsh_season_year").alias("fasion_season_year"), 
        col("srm_contract_id").alias("supp_rel_contract_id"), 
        col("spgrs").alias("spl_proc_key_grp"), 
        col("diff_amount"), 
        col("spgrm").alias("mat_spl_proc_key"), 
        col("wrf_charstc3").alias("wrf_charsteristic3"), 
        col("bwkey").alias("company_code"), 
        col("lbkum").alias("cum_quantity"), 
        col("invrel").alias("inventory_rel_ind"), 
        col("xekbz").alias("purch_document_ind"), 
        col("stock_posting_py").alias("stock_post_amt_prevyear"), 
        col("cont_pstyp").alias("cont_post_type"), 
        col("wrbtr").alias("local_curr_amt"), 
        col("sgtxt").alias("post_description"), 
        col("stock_posting").alias("stock_posting_amt"), 
        col("spgrq").alias("special_group_ind"), 
        col("xdinv").alias("invoice_ind"), 
        col("vmsal").alias("sales_value"), 
        col("spgrv").alias("spl_grp_indicator"), 
        col("grirg").alias("goods_invrecpt_ind"), 
        col("xrueb").alias("rev_goods_move_ind"), 
        col("rbmng").alias("qty_goods_intrans"), 
        col("gityp").alias("goods_move_type"), 
        col("complaint_reason"), 
        col("xhistma").alias("hist_material_ind"), 
        col("zekkn").alias("complaint_reason_num"), 
        col("meins").alias("item_unit_of_measure"), 
        col("inv_itm_origin").alias("inv_item_origin"), 
        col("xcprf").alias("cross_comp_post_ind"), 
        col("licno").alias("license_no_item"), 
        col("spgrext").alias("ext_spl_purpose_group"), 
        col("wrf_charstc2").alias("wrf_characteristic2"), 
        col("matnr").alias("material_number"), 
        col("introw").alias("internal_row_ind"), 
        col("bprme").alias("basic_unit_of_measure"), 
        col("gricd").alias("grp_ofitems_code_ind"), 
        col("fsh_season").alias("fashion_season"), 
        col("frbnr").alias("item_reference_num"), 
        col("xskrl").alias("item_spl_handling_ind"), 
        col("menge").alias("item_quant"), 
        col("retpc").alias("percent_ret_amt"), 
        col("zeile").alias("line_item_no"), 
        col("mwskz").alias("taxation_code"), 
        col("fsh_collection").alias("fasion_collection"), 
        col("zaehk").alias("spl_numbering_counter"), 
        col("erekz").alias("rev_doc_indicator"), 
        col("xblnr").alias("ref_doc_no"), 
        col("erp_contract_itm").alias("erp_contract_item_num"), 
        col("retamt_fc").alias("ret_amt_for_curr"), 
        col("txjcd").alias("tax_juris_code"), 
        col("knttp").alias("account_grp_key"), 
        col("_fivetran_deleted"), 
        date_format(col("_fivetran_synced"), "yyyy-MM-dd HH:mm:ss").alias("_fivetran_synced"), 
        date_format(current_timestamp(), "yyyy-MM-dd HH:mm:ss").alias("_loadtimestamp"), 
        split(input_file_name(), "/")[4].alias("_filename"), 
        substring(split(input_file_name(), "/")[4], 1, 14).alias("_file_timestamp")
    )
